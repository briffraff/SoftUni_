[Composit primary key] :
----------------------
        in model:
                    public int GameId { get; set; }
                    public Game Game { get; set; }

                    public int TagId { get; set; }
                    public Tag Tag { get; set; }
        in context:
                    protected override void OnModelCreating(ModelBuilder model)
                    {
                        model.Entity<GameTag>()
                            .HasKey(k => new { k.GameId, k.TagId });
                    }
----------------------------------------------------------------------------------------------------------
[One to one]:
--------------
        in model:
                    public class Student
                    {
                        public int StudentId { get; set; }
                        public string StudentName { get; set; }

                        public virtual StudentAddress Address { get; set; }
                    }

                    public class StudentAddress
                    {
                        [ForeignKey("Student")]
                        public int StudentAddressId { get; set; }

                        public string Address1 { get; set; }
                        public string Address2 { get; set; }
                        public string City { get; set; }
                        public int Zipcode { get; set; }
                        public string State { get; set; }
                        public string Country { get; set; }

                        public virtual Student Student { get; set; }
                    }
        in context:
                    protected override void OnModelCreating(DbModelBuilder modelBuilder)
                    {
                        // Configure StudentId as FK for StudentAddress
                        modelBuilder.Entity<Student>()
                            .HasRequired(s => s.Address)
                            .WithRequiredPrincipal(ad => ad.Student);

                    }
---------------------------------------------------------------------------------------------------------------
 [One to many]:
 --------------
        in model:
                    public class Student
                    {
                        public int Id { get; set; }
                        public string Name { get; set; }

                        public int CurrentGradeId { get; set; }
                        public Grade CurrentGrade { get; set; }
                    }

                    public class Grade
                    {
                        public int GradeId { get; set; }
                        public string GradeName { get; set; }
                        public string Section { get; set; }

                        public ICollection<Student> Students { get; set; }
                    }
        in context:
                    protected override void OnModelCreating(DbModelBuilder modelBuilder)
                    {
                        // configures one-to-many relationship
                        modelBuilder.Entity<Student>()
                            .HasRequired<Grade>(s => s.CurrentGrade)
                            .WithMany(g => g.Students)
                            .HasForeignKey<int>(s => s.CurrentGradeId);
                    }

---------------------------------------------------------------------------------------------------------------
[Many to Many]:
---------------
 	in model:
                    public class Student
                    {
                        public Student()
                        {
                            this.Courses = new HashSet<Course>();
                        }

                        public int StudentId { get; set; }
                        [Required]
                        public string StudentName { get; set; }

                        public virtual ICollection<Course> Courses { get; set; }
                    }

                    public class Course
                    {
                        public Course()
                        {
                            this.Students = new HashSet<Student>();
                        }

                        public int CourseId { get; set; }
                        public string CourseName { get; set; }

                        public virtual ICollection<Student> Students { get; set; }
                    }
 	in context:
                    protected override void OnModelCreating(DbModelBuilder modelBuilder)
                    {

                        modelBuilder.Entity<Student>()
                        .HasMany<Course>(s => s.Courses)
                        .WithMany(c => c.Students)
                            .Map(cs =>
                        {
                            cs.MapLeftKey("StudentRefId");
                            cs.MapRightKey("CourseRefId");
                            cs.ToTable("StudentCourse");
                        });
						
				##### Nasko pravi many to many v examprep2 - 44 minuta
				  i izglejda po-razlichno ,no .. ne prechi da se probvat i dvete
				  
				  


